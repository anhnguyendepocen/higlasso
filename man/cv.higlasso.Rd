% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/cv.higlasso.R
\name{cv.higlasso}
\alias{cv.higlasso}
\title{Cross Validated Hierarchical Integrative Group LASSO}
\usage{
cv.higlasso(
  Y,
  X,
  Z,
  method = c("aenet", "gglasso"),
  lambda1 = NULL,
  lambda2 = NULL,
  nlambda1 = 10,
  nlambda2 = 10,
  lambda.min.ratio = 0.05,
  nfolds = 10,
  foldid = NULL,
  sigma = 1,
  degree = 3,
  maxit = 5000,
  tol = 1e-05
)
}
\arguments{
\item{Y}{A length n numeric response vector}

\item{X}{A n x p numeric matrix}

\item{Z}{A n x m numeric matrix}

\item{method}{Type of initialization to use. Possible choices are "gglasso"
for group LASSO and "aenet" for adaptive elastic net. Default is "aenet"}

\item{lambda1}{A numeric vector of main effect penalties on which to tune
By default, \code{lambda1 = NULL} and higlasso generates a length
\code{nlambda1} sequence of lambda1s based off of the data and
\code{min.lambda.ratio}}

\item{lambda2}{A numeric vector of interaction effects penalties on which to
tune. By default, \code{lambda2 = NULL} and generates a sequence (length
\code{nlambda2}) of lambda2s based off of the data and
\code{min.lambda.ratio}}

\item{nlambda1}{The number of lambda1 values to generate. Default is 10,
minimum is 2. If \code{lambda1 != NULL}, this parameter is ignored}

\item{nlambda2}{The number of lambda2 values to generate. Default is 10,
minimum is 2. If \code{lambda2 != NULL}, this parameter is ignored}

\item{lambda.min.ratio}{Ratio that calculates min lambda from max lambda.
Ignored if 'lambda1' or 'lambda2' is non NULL. Default is 0.05}

\item{nfolds}{Number of folds for cross validation. Default is 10. The
minimum is 3, and while the maximum is the number of observations
(ie leave one out cross validation)}

\item{foldid}{TODO}

\item{sigma}{Scale parameter for integrative weights. Technically a third
tuning parameter but defaults to 1 for computational tractibility}

\item{degree}{Degree of \code{bs} basis expansion. Default is 3}

\item{maxit}{Maximum number of iterations. Default is 5000}

\item{tol}{Tolerance for convergence. Defaults to 1e-5}
}
\value{
An object of type "cv.higlasso" with 7 elements
\describe{
\item{lambda}{An \code{nlambda1 x nlambda2 x 2} array containing each
pair \code{(lambda1, lambda2)} pair.}
\item{lambda.min}{lambda pair with the lowest cross validation error}
\item{lambda.1se}{}
\item{cvm}{cross validation error at each lambda pair. The error is
calculated from the mean square error.}
\item{cvse}{standard error of 'cvm' at each lambda pair.}
\item{higlasso.fit}{higlasso output from fitting the whole data.}
\item{call}{The call that generated the output.}
}
}
\description{
HiGLASSO is a regularization based selection method designed to detect
non-linear interactions between variables, particulary exposures in
environmental health studies.
We have designed HiGLASSO to
\itemize{
\item Impose strong heredity constraints on two-way interaction effects
(hierarchical).
\item Incorporate adaptive weights without necessitating initial
coefficient estimates (integrative).
\item Induce sparsity for variable selection while respecting group
structure (group LASSO).
}
}
\details{
The objective function \code{higlasso} solves is
\ifelse{html}{\out{<center> argmin &beta;<sub>j</sub>, &eta;<sub>jj'</sub>
&frac12;|| Y - X<sub>j</sub> &beta;<sub>j</sub> -
X<sub>jj'</sub> (&eta;<sub>jj'</sub> &odot; &beta;<sub>j</sub>
&otimes; &beta;<sub>j'</sub>)||<sup>2</sup>
+ &lambda;<sub>1</sub>w<sub>j</sub>||&beta;<sub>j</sub> || +
&lambda;<sub>2</sub> w<sub>jj'</sub> ||&eta;<sub>jj'</sub>||
</center>}}{
\deqn{argmin \\beta_j, \\eta_{jj'} \frac{1}{2}|| Y - X_j \\beta_j}
\deqn{- X_{jj'} (\\eta_{jj'} \odot \\beta_j \otimes \\beta_{j'})||^2}
\deqn{+ \\lambda_1 w_j ||\\beta_j|| + \\lambda_2 w_{jj'} || \\eta_{jj'}||}}
}
\examples{
library(higlasso)

X <- as.matrix(higlasso.df[, paste0("V", 1:10)])
Y <- higlasso.df$Y
Z <- matrix(1, nrow(X))

\dontrun{
# This can take a bit of time
cv.fit <- cv.higlasso(Y, X, Z)
}
}
\references{
TODO
}
\author{
Alexander Rix
}
